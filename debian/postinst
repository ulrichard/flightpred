#!/bin/bash
# postinst script for flightpred

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
#. /usr/share/dbconfig-common/dpkg/postinst.pgsql
#dbc_go flightpred $@


case "$1" in
	configure)
        #Create flightpred admin user
		if ! grep -q "^flightpred:" /etc/passwd ; then
		    adduser --gecos 0 --disabled-password --disabled-login flightpred 
		    # Remove any old crontab entries if this account have had any before
		    su flightpred -c "crontab -r" 2> /dev/null || true
		fi
		echo 'PATH=$PATH:/usr/lib/flightpred/' >> /home/flightpred/.bashrc
	
		# Generate config file and set up the database
		if [ ! -f /etc/flightpred.conf ]; then
		    echo "database = flightpred" > /etc/flightpred.conf
		    PORT=`pg_lsclusters -h | grep main | xargs echo | cut -d' ' -f3`
		    echo "port = $PORT" >> /etc/flightpred.conf
		    echo "user = flightpred" >> /etc/flightpred.conf

			su postgres   -c "psql -e -a -c \"DROP DATABASE IF EXISTS flightpred\""								 >> /dev/null
			su postgres   -c "psql -e -a -c \"CREATE USER flightpred WITH PASSWORD 'flightpred' SUPERUSER\""	 >> /dev/null
			su flightpred -c "createdb -e flightpred"															 >> /dev/null
			su flightpred -c "createlang plpgsql flightpred"													 >> /dev/null
			su flightpred -c "psql -e -a -d flightpred -f /usr/share/postgresql/8.4/contrib/postgis-1.5/postgis.sql"		 >> /dev/null
			su flightpred -c "psql -e -a -d flightpred -f /usr/share/postgresql/8.4/contrib/postgis-1.5/spatial_ref_sys.sql" >> /dev/null
			su flightpred -c "psql -e -a -d flightpred -f /usr/share/flightpred/create_flightpred_db.sql"		 >> /dev/null
			su postgres   -c "psql -e -a -c \"ALTER ROLE flightpred NOSUPERUSER\"" 								 >> /dev/null
		fi

		#update the db structure
		su flightpred -c "psql -e -a -d flightpred -f /usr/share/flightpred/update_flightpred_db.sql" >> /dev/null

		# set up the environment for the webapp
		mkdir -p /usr/run/flightpred
    	chown -R www-data:www-data /usr/run/flightpred

		chown -R flightpred:www-data /home/flightpred
		chmod -R 775 /home/flightpred

		# register with apache
		a2enmod fastcgi
		echo "register flightpred with apache"
		a2ensite flightpred.local 
		a2ensite flightpred.homelinux.org 
		a2ensite flightpred.ulrichard.ch 

		db_stop
		if which invoke-rc.d >/dev/null 2>&1; then
	     	invoke-rc.d apache2 restart
     	else
     		/etc/init.d/apache2 restart
     	fi		
		echo "apache restarted"
		;;

	abort-upgrade)
    	# success: We have successfully aborted an upgrade
    	;;

    abort-remove|abort-deconfigure)
    	;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
